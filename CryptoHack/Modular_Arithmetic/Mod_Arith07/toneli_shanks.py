from pwn import *
from Crypto.Util.number import *
import sys
import ctypes

'''
Looking again at Fermat's little theorem...
if p is prime, for every integer a:
        pow(a, p) = a mod p
and, if p is prime and a is an integer coprime with p:
        pow(a, p-1) = 1 mod p
We can do some magic like this:
Note: i'll use math notation, so a^b means pow(a,b)
        a^(p-1) = 1 (mod p)
        a^(p-1) * a^-1 = a^-1 (mod p)
        a^(p-2) * a * a^-1 = a^-1 (mod p)
        a^(p-2) * 1 = a^-1 (mod p)
So finally we have:
        a^(p-2) = a^-1 (mod p)
So, doing a^(p-2) and then (mod p) we can achieve
our result
'''

def toneli_shanks(a,p):
 legedre_symbol = pow(a,((p-1)//2),p)

 if legedre_symbol == 1 :

        # p -1 = q * (2^s)
        q = p -1
        s = 0
        while q%2 == 0:

                q //= 2
                s = s+1

        if s == 1:
                return (pow(a,(p+1)//4,p),-pow(a,(p+1)//4,p)) 

        z = 2

        for x in range(2,p-1):
                if pow(x,((p-1)//2),p) == p-1 :
                        z = x
                        break

        c = pow(z,q,p)

        r = pow(a,(q+1)//2,p) 
        t =  pow(a,q,p)
        m = s



        while (t-1)%p != 0:

                t2 = (t*t)%p

                i = 1

                for j in range(1,m):

                        if (t2 - 1)%p == 0:
                                i = j
                                break

                        t2 = (t2*t2)%p


                b = pow(c,1 << (m-i-1),p)
                r = (r*b)%p
                t = (t * pow(b,2) )%p
                c = pow(b,2,p)
                m = i

 return (r,p-r)

 





a = 8479994658316772151941616510097127087554541274812435112009425778595495359700244470400642403747058566807127814165396640215844192327900454116257979487432016769329970767046735091249898678088061634796559556704959846424131820416048436501387617211770124292793308079214153179977624440438616958575058361193975686620046439877308339989295604537867493683872778843921771307305602776398786978353866231661453376056771972069776398999013769588936194859344941268223184197231368887060609212875507518936172060702209557124430477137421847130682601666968691651447236917018634902407704797328509461854842432015009878011354022108661461024768
p = 30531851861994333252675935111487950694414332763909083514133769861350960895076504687261369815735742549428789138300843082086550059082835141454526618160634109969195486322015775943030060449557090064811940139431735209185996454739163555910726493597222646855506445602953689527405362207926990442391705014604777038685880527537489845359101552442292804398472642356609304810680731556542002301547846635101455995732584071355903010856718680732337369128498655255277003643669031694516851390505923416710601212618443109844041514942401969629158975457079026906304328749039997262960301209158175920051890620947063936347307238412281568760161


(r,r1) = toneli_shanks(a,p)
print("Result : ",r)
